XENUS_IMPORT void kfree_const(const void * x);
XENUS_IMPORT char * kstrdup(const char * s, gfp_t gfp);
XENUS_IMPORT const char * kstrdup_const(const char * s, gfp_t gfp);
XENUS_IMPORT char * kstrndup(const char * s, size_t max, gfp_t gfp);
XENUS_IMPORT void * kmemdup(const void * src, size_t len, gfp_t gfp);
XENUS_IMPORT char * kmemdup_nul(const char * s, size_t len, gfp_t gfp);
XENUS_IMPORT void * memdup_user(user_addr_t src, size_t len);
XENUS_IMPORT char * strndup_user(user_addr_t s, l_long n);
XENUS_IMPORT void * memdup_user_nul(user_addr_t src, size_t len);
XENUS_IMPORT l_int __get_user_pages_fast(l_unsigned_long start, l_int nr_pages, l_int write, page_k * pages);
XENUS_IMPORT l_int get_user_pages_fast(l_unsigned_long start, l_int nr_pages, l_int write, page_k * pages);
XENUS_IMPORT l_unsigned_long vm_mmap(file_k file, l_unsigned_long addr, l_unsigned_long len, l_unsigned_long prot, l_unsigned_long flag, l_unsigned_long offset);
XENUS_IMPORT void * kvmalloc_node(size_t size, gfp_t flags, l_int node);
XENUS_IMPORT void kvfree(const void * addr);
XENUS_IMPORT bool page_mapped(page_k page);
XENUS_IMPORT address_space_k page_mapping(page_k page);
XENUS_IMPORT l_int __page_mapcount(page_k page);
XENUS_IMPORT l_unsigned_long vm_memory_committed();
